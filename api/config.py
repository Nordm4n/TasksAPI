import os.path

# Настройка режима разработки. Если установлено в True, ошибки будут возвращаться как ответ API.
DEBUG = True

# Корневой путь для API. Этот путь будет использоваться как префикс для всех конечных точек API.
DEFAULT_PATH = '/api/v1/'

# Базовая директория проекта. Определяется автоматически как путь к текущему файлу.
BASE_DIR = os.path.dirname(os.path.abspath(__file__))

# Словарь с конфигурациями классов валидаторов пароля.
# Каждый класс валидатора можно настроить с дополнительными параметрами.
PASSWORD_VALIDATORS = {
    # Валидатор пароля для проверки сложности:
    # Проверяет наличие заглавных букв, цифр, спецсимволов и т.д.
    # Параметры:
    # - uppercase: int минимальное количество заглавных букв.
    # - numbers: int минимальное количество цифр.
    # - special: int минимальное количество спецсимволов.
    # - raise_exception: bool — выбросить исключение при несоответствии требованиям.
    'tools.password_tools.StrengthPasswordValidator': {},

    # Валидатор пароля для проверки схожести пароля с предыдущими версиями.
    # Параметры:
    # - coefficient: float — коэффициент, определяющий допустимую схожесть.
    # - raise_exception: bool — выбросить исключение при высокой схожести.
    'tools.password_tools.LevenshteinPasswordValidator': {},
}

# Алгоритм хэширования для паролей.
# Этот алгоритм используется для безопасного хранения паролей.
HASH_PASSWORD_ALGORITHM = 'bcrypt'
# Список доступных алгоритмов хэширования паролей: bcrypt, argon2, pbkdf2_sha256, sha256_crypt
